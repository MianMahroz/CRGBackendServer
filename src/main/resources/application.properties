
app.secret=CHANGE_ME
app.email.from=mianmahroz@gmail.com
app.email.support=mianmahroz@gmail.com
app.url=http://localhost:4200/registrationSuccess/

#Set this following to true if you want to verify email address on new user registrations
app.user.verification=false
#DEV/PROD
app.environment=DEV
# Email (MailProperties)
spring.mail.default-encoding=UTF-8
mail.smtp.starttls.enable=true
mail.transport.protocol=smtp
mail.smtp.auth=true
mail.debug=true
mail.smtp.socketFactory.port=587
mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.smtp.socketFactory.fallback=false
#spring.mail.properties.*= # properties to set on the JavaMail session
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mianmahroz@gmail.com	
spring.mail.password=mianmian
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


server.use-forward-headers=true
# JPA/Hibernate properties
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in project
#spring.jpa.hibernate.ddl-auto =create

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.driver-class-name=com.mysql.jdbc.Driver


#spring.datasource.url=jdbc:sqlserver://192.169.142.65:1433;databaseName=APPRTmart
#spring.datasource.username=RTmart
#spring.datasource.password=RTmart

spring.datasource.url=jdbc:mysql://localhost:3306/chiraghdatabase?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
#spring.datasource.password=admin

#spring.datasource.url=jdbc:mysql://mysql_bcm:3306/chiraghdatabase?useUnicode=true&characterEncoding=utf8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root



#spring.datasource.validationQuery=SELECT 1

#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jackson.serialization.fail-on-empty-beans=false
#spring.jackson.serialization.INDENT_OUTPUT: true

#spring.jpa.properties.hibernate.dialect.supportsSequences=false
#spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.hibernate.new-id-generator-mappings=true
server.port =8084
#server.servlet.contextPath=/app
#spring.mvc.static-path-pattern=/resources/**


#Images static path
ImagePath=C:/Chiragh

log4j.logger.org.hibernate.SQL=debug

### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=trace
log4j.logger.org.hibernate.type.descriptor.sql=trace

#elastic Search Properties
#elasticsearch.clustername = elasticsearch
#elasticsearch.host = localhost
#elasticsearch.port = 9300
#spring.data.elasticsearch.properties.path.home=target/elastic-embedded
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s




#redis properties
#spring.session.store-type=redis # Session store type.
#server.servlet.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.
#spring.session.redis.flush-mode=on-save # Sessions flush mode.
#spring.session.redis.namespace=spring:session # Namespace for keys used to store sessions.
#spring.redis.host=localhost # Redis server host.
#spring.redis.password= # Login password of the redis server.
#spring.redis.port=6379 # Redis server port.

#server.session.cookie.secure=true
#spring.session.store-type= # Session store type.
#spring.session.timeout= # Session timeout. If a duration suffix is not specified, seconds will be used.
#server.servlet.session.timeout=60s
#spring.session.servlet.filter-order=-2147483598 # Session repository filter order.
#spring.session.servlet.filter-dispatcher-types=async,error,request # Session repository filter dispatcher types.



